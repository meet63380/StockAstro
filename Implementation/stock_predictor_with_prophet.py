# -*- coding: utf-8 -*-
"""Stock predictor with prophet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TF1MGE2L_xp8mqI8l6YTh3NXbkO87BVf
"""

import urllib.request as urllib2
def internet_on():
    for timeout in [1,5,10,15]:
        try:
            response=urllib2.urlopen('http://google.com',timeout=timeout)
            return True
        except urllib2.URLError as err: pass
    return False

def get_historical_data():
  print("Enter Stock name")
  stock=yf.Ticker(input().strip())
  df=stock.history(period='max')
  while True:
    if(not df.empty):
      break
    else:
      stock=yf.Ticker(input("Enter valid stock name: ").strip())
      df=stock.history(period='max')
  return df

def get_tomorrow_prediction():
  df=get_historical_data()
  df=df.reset_index()
  # Select Date and Price
  df = df[["Date","Close"]] 
  # Rename the features: These names are required for the model fitting
  df = df.rename(columns = {"Date":"ds","Close":"y"})
  # The Prophet class (model)
  fbp = Prophet(daily_seasonality = True) 
  # Fit the model 
  fbp.fit(df)
  # We need to specify the number of days in future
  fut = fbp.make_future_dataframe(periods=1) 
  forecast = fbp.predict(fut)
  #print(df.tail()
  return (forecast['yhat'][-1:].values)

!pip install yfinance -q
!pip install fbprophet -q
import pandas as pd
import yfinance as yf
from fbprophet import Prophet
if __name__=="__main__":
  Stock=None
  print("StockAstro - One stop tool to check stock data of any stock and predict next day closing prices")
  while(not internet_on()):
    print("Please enable internet access to run this program")
    continue
  while True:  
    print("\nChoose from the following options")  
    print("1. Check Historical Stock Data")  
    print("2. Get Next Day's Closing Prediction")  
    print("3. Exit")
    choice = input("Enter the Choice:")
    while type(choice) is not int:
      try:  
        choice=int(choice)
      except:
        choice=input("Invalid Choice. Please Enter a Number for The Menu Options: ")
    if choice==1:
      df=get_historical_data()
      print(df)
    elif choice==2:
      pred=get_tomorrow_prediction()
      print("Tomorrow's closing value will be: {}".format(pred))
    elif choice==3:
      break